#!/usr/bin/env python3

'''
1. Take in JSON file with sales data
2. Create dictionary from sales data
3. Calculate model with highest sales
4. append "The {car model} had the most sales: {total sales}" to summary list
5. Calculate most popular year across all models 
6. append "The most popular year was {year} with {total sales in that year} sales." to summary
7. use reports.generate() to create pdf report
    a. Contains both summary statements
    b. Contains table
        1. sorted by ID
        2. Car field in format "{make} {model} ({year})
        3. Price
        4. Total Sales
8. Send PDF out attached to an email
'''

import json
import locale
import sys

def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  summary = []

  max_revenue = {"revenue": 0}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue_item = item
    # TODO: also handle max sales
    if item["total_sales"] > max_sales:
        max_sales = item["total_sales"]
        max_sales_item = item
    # TODO: also handle most popular car_year
  max_rev_string = "The {} generated the most revenue: ${}".format(format_car(max_revenue_item["car"]), max_revenue_item["revenue"])
  max_sales_string = "The {} had the most sales: {}".format(format_car(max_sales_item["car"]), max_sales_item["total_sales"])
  summary.append(max_rev_string)
  summary.append(max_sales_string)

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  print(summary)
  # TODO: turn this into a PDF report

  # TODO: send the PDF report as an email attachment


if __name__ == "__main__":
  main(sys.argv)